use crate::acme_model::{Acme, AcmeError};
use std::env;
use std::env::VarError;
use tokio::fs;

pub async fn read_acme_json() -> Result<Acme, AcmeError> {
    let acme_json_path = get_acme_json_path()?;
    let string = fs::read_to_string(&acme_json_path).await?;
    let acme: Acme = serde_json::from_str(&string)?;

    Ok(acme)
}

/// returns path of acme.json file, which is generated by traefik
fn get_acme_json_path() -> Result<String, VarError> {
    env::var("ACME_JSON_PATH")
}

/// returns output path of certificate files
fn get_output_path() -> Result<String, VarError> {
    env::var("OUTPUT_PATH")
}
